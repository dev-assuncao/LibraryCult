@model LibraryCult.Models.ViewModels.SellerFormViewModel


@{
    ViewData["Title"] = "Create";
}


<h4>Would you like to register a new seller?</h4>
<hr />

<p> Add the information below the seller: </p>

<div class="row-cols-5">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div class="form-group">
                <label asp-for="Seller.Name" class="control-label"> </label>
                <input asp-for="Seller.Name" class="form-control" />
                <span asp-validation-for="Seller.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.BirthDate" class="control-label"></label>
                <input asp-for="Seller.BirthDate" class="form-control" />
                <span asp-validation-for="Seller.BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.Salary" class="control-label"></label>
                <input asp-for="Seller.Salary" class="form-control" />
                <span asp-validation-for="Seller.Salary" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Seller.DepartmentId" class="control-label"></label>
                <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments, "DepartmentId", "Name"))" class="form-control"> </select>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn bg-primary text-white" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
